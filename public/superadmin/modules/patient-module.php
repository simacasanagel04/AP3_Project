<?php
// patient-module.php

// Ensure your classes are included:
require_once dirname(__DIR__, 3) . '/classes/Patient.php';
require_once dirname(__DIR__, 3) . '/classes/User.php';

// Assuming $db is available from the main application environment
// $db = (new Database())->getConnection(); 

$patient = new Patient($db);
$user = new User($db);

$message = '';
$userMessage = '';
$user_type = $_SESSION['user_type'] ?? 'super_admin';
$search = $_GET['search_patient'] ?? '';
$newPatient = null;
$autoGeneratedPassword = ''; // Variable to hold the generated password
$displayPatientId = ''; // New variable to ensure the patient ID is available to the modal

// Restrict access
if ($user_type !== 'super_admin') {
    echo '<div class="alert alert-danger">Access denied. Only Super Admin can access this module.</div>';
    return;
}

// Handle actions
if ($_SERVER['REQUEST_METHOD'] === 'POST') {

    // ADD - COMBINED PATIENT & USER CREATION
    if (isset($_POST['add'])) {
        $data = [
            'pat_first_name'    => $_POST['pat_first_name'],
            'pat_middle_init'   => $_POST['pat_middle_init'],
            'pat_last_name'     => $_POST['pat_last_name'],
            'pat_dob'           => $_POST['pat_dob'],
            'pat_gender'        => $_POST['pat_gender'],
            'pat_contact_num'   => $_POST['pat_contact_num'],
            'pat_email'         => $_POST['pat_email'],
            'pat_address'       => $_POST['pat_address']
        ];
        
        // **STEP 1: Create Patient Record**
        $id = $patient->create($data); // $id holds the newly inserted pat_id

        if ($id) {
            $message = "✅ Patient added successfully.";
            $displayPatientId = $id; // Store the patient ID for modal display
            
            // Get the submitted email. We use trim() for consistency.
            $submittedEmail = trim($data['pat_email']);

            // Fetch the newly created patient data for the modal 
            $stmt = $db->prepare("SELECT * FROM patient WHERE pat_id = ?");
            $stmt->execute([$id]);
            $newPatient = $stmt->fetch(PDO::FETCH_ASSOC);

            // **STEP 2: Auto-Create User Account for the New Patient**
            // FIX: Check against the submitted email which is reliable
            if (!empty($submittedEmail)) { 
                
                // Generate a password and hash it
                $autoGeneratedPassword = generateRandomPassword(10);
                $hashedPassword = password_hash($autoGeneratedPassword, PASSWORD_DEFAULT);
                
                $userData = [
                    'user_name' => $submittedEmail, // Use the submitted email
                    'password'  => $hashedPassword,
                    'linked_id' => $id, 
                    'user_type' => 'patient' // Crucial for User.php logic
                ];
                
                $userCreationResult = $user->addLinkedAccount($userData);

                // FIX: User.php now returns 'true' on success or a string with '❌' on failure
                if ($userCreationResult === true || (is_string($userCreationResult) && strpos($userCreationResult, '✅') !== false)) {
                    $userMessage = "✅ User account created for {$submittedEmail} with temporary password: **{$autoGeneratedPassword}**";
                } else {
                    // Critical failure: User account failed to create. Rollback the patient record.
                    $patient->delete($id);
                    // Display the error returned by the User class
                    $message = "❌ **CRITICAL FAILURE:** Failed to create user account. Patient record was NOT saved (Rolled back). Error: " . $userCreationResult;
                    $newPatient = null;
                    $displayPatientId = '';
                }
            } else {
                // Patient created but no email provided to create a login account.
                $userMessage = "⚠️ Patient added successfully, but no email for user creation. Manual account setup needed.";
            }
        } else {
            $message = "❌ Failed to add patient.";
        }
    }
    
    // UPDATE
    elseif (isset($_POST['update'])) {
        $success = $patient->update($_POST);
        $message = $success ? "✅ Patient updated successfully." : "❌ Failed to update patient.";
    }

    // DELETE
    elseif (isset($_POST['delete'])) {
        $id = $_POST['delete'];
        $success = $patient->delete($id);
        $user->deleteLinkedAccount($id, 'patient');
        $message = $success ? "✅ Patient deleted successfully." : "❌ Failed to delete patient.";
    }
}

// Fetch patient records
if (!empty($search)) {
    $records = $patient->searchWithAppointments($search);
} else {
    // If you implemented pagination, use allPaginated here instead of all()
    $records = $patient->all(); 
}

// Password generator
function generateRandomPassword($length = 10) {
    return substr(str_shuffle('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'), 0, $length);
}
?>

<h1 class="fw-bold mb-4">Patient Management</h1>

<?php if ($message): ?><div class="alert alert-info"><?= htmlspecialchars($message) ?></div><?php endif; ?>
<?php if ($userMessage): ?><div class="alert alert-success"><?= $userMessage ?></div><?php endif; ?>

<div class="d-flex justify-content-between align-items-center mb-3">
    <form class="d-flex" method="GET">
        <input type="hidden" name="module" value="patient">
        <input class="form-control me-2" type="search" name="search_patient" placeholder="Search by name..." value="<?= htmlspecialchars($search) ?>">
        <button class="btn btn-outline-primary" type="submit">Search</button>
        <?php if ($search): ?><a href="?module=patient" class="btn btn-outline-secondary ms-2">Reset</a><?php endif; ?>
    </form>
    <button class="btn btn-success" data-bs-toggle="collapse" data-bs-target="#addFormPatient">Add New Patient</button>
</div>

<div id="addFormPatient" class="collapse mb-4">
    <div class="card card-body shadow-sm">
        <form method="POST" class="row g-3" onsubmit="return validatePatientForm(this)">
            <div class="col-md-4"><input name="pat_first_name" class="form-control" placeholder="First Name" required></div>
            <div class="col-md-4"><input name="pat_middle_init" class="form-control" placeholder="Middle Initial"></div>
            <div class="col-md-4"><input name="pat_last_name" class="form-control" placeholder="Last Name" required></div>
            <div class="col-md-4"><input type="date" name="pat_dob" class="form-control" required></div>
            <div class="col-md-4">
                <select name="pat_gender" class="form-select" required>
                    <option value="">Select Gender</option><option>Male</option><option>Female</option><option>Other</option>
                </select>
            </div>
            <div class="col-md-4"><input name="pat_contact_num" class="form-control" placeholder="09xxxxxxxxx" pattern="^09\d{9}$" required></div>
            <div class="col-md-6"><input type="email" name="pat_email" class="form-control" placeholder="Email (Used as Username)" required></div>
            <div class="col-md-6"><input name="pat_address" class="form-control" placeholder="Address" required></div>
            <div class="col-md-12 text-end"><button name="add" class="btn btn-primary">Save Patient & Create User</button></div>
        </form>
    </div>
</div>

<div class="card p-3 shadow-sm">
    <h5>All Patient Records</h5>
    <div class="table-responsive">
        <table class="table table-bordered table-striped align-middle mt-3">
            <thead class="table-light">
                <tr>
                    <th>ID</th><th>First</th><th>Middle</th><th>Last</th><th>DOB</th><th>Gender</th>
                    <th>Contact</th><th>Email</th><th>Address</th><th>Created</th><th>Updated</th><th>Action</th>
                </tr>
            </thead>
            <tbody>
                <?php if (empty($records)): ?>
                    <tr><td colspan="12" class="text-center">No patients found.</td></tr>
                <?php else: foreach ($records as $r): ?>
                    <tr>
                        <form method="POST" onsubmit="return validatePatientForm(this)">
                            <td><?= $r['pat_id'] ?></td>
                            <td><input name="pat_first_name" value="<?= htmlspecialchars($r['pat_first_name']) ?>" class="form-control form-control-sm" required></td>
                            <td><input name="pat_middle_init" value="<?= htmlspecialchars($r['pat_middle_init'] ?? '') ?>" class="form-control form-control-sm"></td>
                            <td><input name="pat_last_name" value="<?= htmlspecialchars($r['pat_last_name']) ?>" class="form-control form-control-sm" required></td>
                            <td><input type="date" name="pat_dob" value="<?= htmlspecialchars($r['pat_dob']) ?>" class="form-control form-control-sm" required></td>
                            <td><input name="pat_gender" value="<?= htmlspecialchars($r['pat_gender']) ?>" class="form-control form-control-sm"></td>
                            <td><input name="pat_contact_num" value="<?= htmlspecialchars($r['pat_contact_num']) ?>" class="form-control form-control-sm" pattern="^09\d{9}$" required></td>
                            <td><input type="email" name="pat_email" value="<?= htmlspecialchars($r['pat_email']) ?>" class="form-control form-control-sm" required></td>
                            <td><input name="pat_address" value="<?= htmlspecialchars($r['pat_address']) ?>" class="form-control form-control-sm"></td>
                            <td><?= $r['formatted_created_at'] ?? '-' ?></td>
                            <td><?= $r['formatted_updated_at'] ?? '-' ?></td>
                            <td>
                                <input type="hidden" name="pat_id" value="<?= $r['pat_id'] ?>">
                                <button name="update" class="btn btn-sm btn-success mb-1 w-100">Update</button>
                                <button name="delete" value="<?= $r['pat_id'] ?>" class="btn btn-sm btn-danger w-100" onclick="return confirm('Delete this patient?')">Delete</button>
                            </td>
                        </form>
                    </tr>
                <?php endforeach; endif; ?>
            </tbody>
        </table>
    </div>
</div>

<div class="modal fade" id="autoUserPatientModal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered"><div class="modal-content">
    <div class="modal-header"><h5 class="modal-title">New User Account Created!</h5></div>
    <div class="modal-body">
        <p>A new patient record and linked user account were successfully created.</p>
        <p>Please note the temporary login details for the patient:</p>
        <div class="mb-3">
          <label>Linked Patient ID</label>
          <input type="text" class="form-control" value="<?= htmlspecialchars($displayPatientId ?? '') ?>" readonly>
        </div>
        <div class="mb-3">
          <label>Username (Email)</label>
          <input type="text" class="form-control" value="<?= htmlspecialchars($newPatient['pat_email'] ?? $submittedEmail ?? '') ?>" readonly>
        </div>
        <div class="mb-3">
          <label>Temporary Password</label>
          <input type="text" class="form-control" value="<?= htmlspecialchars($autoGeneratedPassword) ?>" readonly>
        </div>
    </div>
    <div class="modal-footer">
      <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
    </div>
  </div></div>
</div>

<script>
function validatePatientForm(f){
    if(f.pat_email && !/^[^@]+@[^@]+\.[a-z]+$/i.test(f.pat_email.value)){alert("Invalid email format");return false;}
    if(f.pat_contact_num && !/^09\d{9}$/.test(f.pat_contact_num.value)){alert("Invalid phone number format. Use 09xxxxxxxxx");return false;}
    return true;
}

// Show the modal only if a new patient was successfully created AND a user account was successfully linked
<?php if($displayPatientId && !empty($autoGeneratedPassword)): ?>
document.addEventListener("DOMContentLoaded", function() {
    // Slight delay to ensure all other DOM processing is done
    setTimeout(function() {
        var modal = new bootstrap.Modal(document.getElementById('autoUserPatientModal'));
        modal.show();
    }, 100); 
});
<?php endif; ?>
</script>